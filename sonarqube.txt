
docker run -d --name sonarqube -e SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true -p 9000:9000 sonarqube:8.7.0-community

user: admin
pass: admin
# PARA GENERA REPORTES
mvn sonar:sonar -Dsonar.projectKey=xxxxxxxxxxxxxx -Dsonar.host.url=http://localhost:9000 -Dsonar.login=047e94c56fae3d94e0fb506020e4871e150ac480

# Si esta usando quarkus
Estar pendiente de las versiones, pues la libreria de jacoco no está en todas la versiones de Quarkus ni 
tampoco es compatible. Para una guía, se puede ver aquí:

	https://quarkus.io/guides/tests-with-coverage#quarkus-jacoco-jacoco-config_quarkus.jacoco.data-file

	Para que quarkus tome los reportes de pruebas unitarias se debe configurar el plugin así:
		quarkus.jacoco.data-file=jacoco.exec
		quarkus.jacoco.report-location=site/jacoco

# Para configurar reportes de cubriento de pruebas unitarias
1. Se debe configurar un generador de reportes en el microservicio. Esta es la configuración para 
   el generador Jacoco. SonarQube no genera reportes, sólo los analiza:

    <build>
        <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>0.8.6</version>
            <configuration>
            <includes>
                <include>**/service/*</include>
            </includes>
            </configuration>
            <executions>
                <execution>
                    <goals>
                        <goal>prepare-agent</goal>
                    </goals>
                </execution>
                <execution>
                    <id>report</id>
                    <phase>prepare-package</phase>
                    <goals>
                        <goal>report</goal>
                    </goals>
                </execution>
            </executions>
        </plugin>
    </build>

    <reporting>
		<plugins>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<reportSets>
					<reportSet>
						<reports>
							<!-- select non-aggregate reports -->
							<report>report</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
		</plugins>
	</reporting>

   Notar que esta configuracion especifica tambien qué se desea analizar.
   Documentacion de esto se encuentra aquí
	https://www.eclemma.org/jacoco/trunk/doc/report-mojo.html#excludes
   Para generar el reporte que se dejará en target/site basta con correr
   maven en cualquier acción que pase por la ejecución de los tests por
   ejemplo:
	mvn package
	mvn intall
   Para el error de que el .exec no existe y portanto se salta la generación
   de reportes, ejecutar este comando (se deben correr los test con surefire)
	mvn test
	mvn clean test jacoco:report


# Para excluir o incluir reportes hay dos alternativas:
## Desde el mismo projecto
1. Agregar el siguiente plugin al pom:
      <plugin>
        <groupId>org.sonarsource.scanner.maven</groupId>
        <artifactId>sonar-maven-plugin</artifactId>
        <version>3.4.0.905</version>
      </plugin>
2. Configurar las exclusiones (no hay config. para inclusiones) de la
   siguiente manera:
  <properties>
    <sonar.coverage.exclusions>
      **/config/*,
      **/controller/*,
      **/dto/*,
      **/repository/*,
      **/exception/*,
      **/validator/*
      **/*Application.java
    </sonar.coverage.exclusions>
    <sonar.exclusions>
      **/QueryParams.java
    </sonar.exclusions>
  </properties>

## Desde la consola web del Sonarqube
1. Ir a Administracion (parte superior) > Analysis Scope 
	- Coverage Exclusions
		**/config/*
		**/controller/*
		**/dto/*
		**/repository/*
		**/util/*
		**/exception/*
		**/validator/*
	- Ignore Issues on Multiple Criteria
		' java:S1104 ~ **/QueryParams.java
